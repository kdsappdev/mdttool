using System;
namespace ${nameSpace}
{
	/// <summary>
#if(!$codeGenHelper.IsNullOrEmpty(${tableInfo.TableComments}))
	/// ${tableInfo.TableComments}
#else
	/// ${tableInfo.TableName}
#end
	/// </summary>
	/// <remarks>
	/// $date: 创建. ${pluginName} <br/>
	/// </remarks>
	[Serializable]
	public class ${codeGenHelper.GetClassName(${tableInfo.tableName},$codeRule)}
	{
		#set($region="#")${region}region 字段
		
#foreach($column in $tableInfo.Columns)
#set($netType=${dataTypeMappingHelper.GetCSharpDataTypeByDbType(${dbType},${column.DataType},${column.DataScale},${column.DataLength},${column.DataNullAble})})		
		private $netType $codeGenHelper.StrFieldWith_(${column.Name})#if(!$column.DataNullAble || !$codeGenHelper.IsNullOrEmpty(${column.DataDefault}))=${codeGenHelper.GetDefaultValueByDataType(${netType}, ${column.DataDefault})}#end;#if(${column.Comments})//${column.Comments}; #end
		
#end

		${region}endregion

		${region}region 属性
		
#foreach($column in $tableInfo.Columns)
		/// <summary>
#if(${column.Comments})
		/// ${column.Comments}
#else
		/// ${column.Name}
#end
		/// </summary>
#set($netType=${dataTypeMappingHelper.GetCSharpDataTypeByDbType(${dbType},${column.DataType},${column.DataScale},${column.DataLength},${column.DataNullAble})})
		public $netType $codeGenHelper.StrProperty(${column.Name})
		{
			get { return $codeGenHelper.StrFieldWith_(${column.Name}); }
			set { $codeGenHelper.StrFieldWith_(${column.Name}) = value; }
		}
		
#end

		${region}endregion

	}
}